{
  "version": 3,
  "sources": ["<stdin>", "../node_modules/@remix-run/dev/compiler/shims/react.ts", "../app/entry.server.tsx", "C:\\Users\\Amir_\\Projetos\\reactCode\\remix-supabase-starter\\app\\root.tsx", "../app/components/Navigation.tsx", "C:\\Users\\Amir_\\Projetos\\reactCode\\remix-supabase-starter\\app\\routes\\auth-actions\\reset-password.tsx", "../app/supabase.server.ts", "C:\\Users\\Amir_\\Projetos\\reactCode\\remix-supabase-starter\\app\\routes\\auth-actions\\refresh-token.tsx", "../app/session.server.ts", "C:\\Users\\Amir_\\Projetos\\reactCode\\remix-supabase-starter\\app\\routes\\auth-actions\\invite.tsx", "C:\\Users\\Amir_\\Projetos\\reactCode\\remix-supabase-starter\\app\\routes\\auth-actions\\logout.tsx", "../app/auth.server.ts", "C:\\Users\\Amir_\\Projetos\\reactCode\\remix-supabase-starter\\app\\routes\\create-account.tsx", "C:\\Users\\Amir_\\Projetos\\reactCode\\remix-supabase-starter\\app\\routes\\check-email.tsx", "C:\\Users\\Amir_\\Projetos\\reactCode\\remix-supabase-starter\\app\\routes\\index.tsx", "C:\\Users\\Amir_\\Projetos\\reactCode\\remix-supabase-starter\\app\\routes\\login.tsx", "C:\\Users\\Amir_\\Projetos\\reactCode\\remix-supabase-starter\\app\\routes\\notes.tsx", "server-assets-manifest:@remix-run/dev/assets-manifest", "server-entry-module:@remix-run/dev/server-build"],
  "sourcesContent": ["export * from \"@remix-run/dev/server-build\";", "// eslint-disable-next-line import/no-extraneous-dependencies\nimport * as React from \"react\";\nexport { React };\n", "import type { EntryContext } from \"@remix-run/node\";\nimport { RemixServer } from \"@remix-run/react\";\nimport { renderToString } from \"react-dom/server\";\n\nexport default function handleRequest(\n  request: Request,\n  responseStatusCode: number,\n  responseHeaders: Headers,\n  remixContext: EntryContext\n) {\n  let markup = renderToString(\n    <RemixServer context={remixContext} url={request.url} />\n  );\n\n  responseHeaders.set(\"Content-Type\", \"text/html\");\n\n  return new Response(\"<!DOCTYPE html>\" + markup, {\n    status: responseStatusCode,\n    headers: responseHeaders,\n  });\n}\n", "import type { MetaFunction } from \"@remix-run/node\";\r\nimport {\r\n  Links,\r\n  LiveReload,\r\n  Meta,\r\n  Outlet,\r\n  Scripts,\r\n  ScrollRestoration,\r\n} from \"@remix-run/react\";\r\nimport Navigation from \"./components/Navigation\";\r\n\r\nexport const meta: MetaFunction = () => ({\r\n  charset: \"utf-8\",\r\n  title: \"Tecno Brega Stack\",\r\n  viewport: \"width=device-width,initial-scale=1\",\r\n});\r\n\r\nexport default function App() {\r\n  return (\r\n    <html lang=\"en\">\r\n      <head>\r\n        <Meta />\r\n        <Links />\r\n      </head>\r\n      <body>\r\n        <Navigation />\r\n        <Outlet />\r\n        <ScrollRestoration />\r\n        <Scripts />\r\n        <LiveReload />\r\n      </body>\r\n    </html>\r\n  );\r\n}\r\n", "import { Form, NavLink } from \"@remix-run/react\";\r\n\r\nexport default function Navigation() {\r\n  return (\r\n    <nav style={{ display: \"flex\", gap: \"1rem\" }}>\r\n      <NavLink to=\"/\">Home</NavLink>\r\n      <NavLink to=\"/login\">Login</NavLink>\r\n      <NavLink to=\"/create-account\">Create account</NavLink>\r\n      <NavLink to=\"/notes\">Notes</NavLink>\r\n      <Form method=\"post\" action=\"/auth-actions/logout\">\r\n        <button>Logout</button>\r\n      </Form>\r\n    </nav>\r\n  );\r\n}\r\n", "import type { ActionFunction } from \"@remix-run/node\";\r\nimport { supabaseClient } from \"~/supabase.server\";\r\n\r\nexport const action: ActionFunction = async () => {\r\n  const { data, error } = await supabaseClient.auth.api.resetPasswordForEmail(\r\n    \"amir.zahlan@gmail.com\"\r\n  );\r\n  console.log({ data, error });\r\n\r\n  return {};\r\n};\r\n", "import { createClient } from \"@supabase/supabase-js\";\r\n\r\ndeclare global {\r\n  namespace NodeJS {\r\n    interface ProcessEnv {\r\n      SUPABASE_URL: string;\r\n      SUPABASE_ANON_KEY: string;\r\n      SUPABASE_SERVICE_ROLE_KEY: string;\r\n    }\r\n  }\r\n}\r\n\r\nif (!process.env.SUPABASE_URL) throw new Error(\"ENV: SUPABASE_URL is required\");\r\n\r\nif (!process.env.SUPABASE_ANON_KEY)\r\n  throw new Error(\"ENV: SUPABASE_ANON_KEY is required\");\r\n\r\nif (!process.env.SUPABASE_SERVICE_ROLE_KEY)\r\n  throw new Error(\"ENV: SUPABASE_SERVICE_ROLE_KEY is required\");\r\n\r\nexport const supabaseAdmin = createClient(\r\n  process.env.SUPABASE_URL,\r\n  process.env.SUPABASE_SERVICE_ROLE_KEY\r\n);\r\n\r\nexport const supabaseClient = createClient(\r\n  process.env.SUPABASE_URL,\r\n  process.env.SUPABASE_ANON_KEY,\r\n  { autoRefreshToken: false, persistSession: false }\r\n);\r\n", "import { json } from \"@remix-run/node\";\r\nimport type { ActionFunction } from \"@remix-run/node\";\r\nimport { commitSession, getSession, sessionKey } from \"~/session.server\";\r\nimport { supabaseAdmin } from \"~/supabase.server\";\r\n\r\nexport const action: ActionFunction = async ({ request }) => {\r\n  const session = await getSession(request.headers.get(\"Cookie\"));\r\n  const authSession = session.get(sessionKey);\r\n\r\n  if (!authSession || !authSession.refresh_token) {\r\n    // Message has no session\r\n    return json({});\r\n  }\r\n\r\n  console.log(authSession.refresh_token);\r\n  console.log(authSession.expires_at);\r\n\r\n  const { data, error } = await supabaseAdmin.auth.api.refreshAccessToken(\r\n    authSession.refresh_token\r\n  );\r\n\r\n  if (error) {\r\n    return json(\r\n      { message: error?.message },\r\n      {\r\n        status: error?.status,\r\n      }\r\n    );\r\n  }\r\n\r\n  session.set(sessionKey, { ...data });\r\n\r\n  return json(\r\n    {},\r\n    {\r\n      headers: {\r\n        \"Set-Cookie\": await commitSession(session),\r\n      },\r\n    }\r\n  );\r\n};\r\n", "import { createCookieSessionStorage } from \"@remix-run/node\";\r\n\r\nif (!process.env.SESSION_SECRET) {\r\n  throw Error(\"SESSION_SECRET must be set\");\r\n}\r\n\r\nexport const sessionKey = process.env.SESSION_KEY || \"__supabase_session\";\r\n\r\nexport const { getSession, commitSession, destroySession } =\r\n  createCookieSessionStorage({\r\n    cookie: {\r\n      name: sessionKey,\r\n\r\n      domain:\r\n        process.env.NODE_ENV === \"production\"\r\n          ? process.env.SERVER_URL\r\n          : \"localhost\",\r\n      httpOnly: true,\r\n      path: \"/\",\r\n      sameSite: \"lax\",\r\n      secrets: [process.env.SESSION_SECRET],\r\n      secure: process.env.NODE_ENV === \"production\",\r\n    },\r\n  });\r\n", "import { json } from \"@remix-run/node\";\r\nimport type { ActionFunction } from \"@remix-run/node\";\r\nimport { supabaseAdmin } from \"~/supabase.server\";\r\n\r\nexport const action: ActionFunction = async ({ request }) => {\r\n  const formData = await request.formData();\r\n  const email = formData.get(\"email\") as string;\r\n  const { data, error } = await supabaseAdmin.auth.api.generateLink(\r\n    \"signup\",\r\n    email,\r\n    {\r\n      redirectTo: \"localhost:3000\",\r\n    }\r\n  );\r\n\r\n  if (error) {\r\n    return json(\r\n      { message: error?.message },\r\n      {\r\n        status: error?.status,\r\n      }\r\n    );\r\n  }\r\n\r\n  // TODO: Send link by email\r\n  console.log(data);\r\n\r\n  return json(true);\r\n};\r\n", "import type { ActionFunction } from \"@remix-run/node\";\r\nimport { handleSignOutSession } from \"~/auth.server\";\r\n\r\nexport const action: ActionFunction = async ({ request }) => {\r\n  return handleSignOutSession(request, \"/\");\r\n};\r\n", "import { json, redirect } from \"@remix-run/node\";\r\nimport type {\r\n  ApiError,\r\n  Session,\r\n  SupabaseClient,\r\n  User,\r\n} from \"@supabase/supabase-js\";\r\nimport type { Session as NodeSession } from \"@remix-run/node\";\r\nimport {\r\n  commitSession,\r\n  destroySession,\r\n  getSession,\r\n  sessionKey,\r\n} from \"./session.server\";\r\nimport { supabaseAdmin, supabaseClient } from \"./supabase.server\";\r\nimport type { BaseResponse } from \"./types\";\r\n\r\nexport const getCookieSession = async (\r\n  request: Request\r\n): Promise<NodeSession> => {\r\n  return await getSession(request.headers.get(\"Cookie\"));\r\n};\r\n\r\nexport async function getUser(accessToken: string): Promise<{\r\n  user: User | null;\r\n  data: User | null;\r\n  error: ApiError | null;\r\n}> {\r\n  return await supabaseClient.auth.api.getUser(accessToken);\r\n}\r\n\r\nexport const handleResponse = async (\r\n  request: Request,\r\n  {\r\n    data,\r\n    error,\r\n  }: {\r\n    data: any;\r\n    error: any;\r\n  }\r\n): Promise<Response> => {\r\n  const session = await getCookieSession(request);\r\n  const response: BaseResponse = {\r\n    success: true,\r\n    data: null,\r\n    errors: [],\r\n  };\r\n  response.data = data;\r\n  if (error) {\r\n    session.flash(\"error\", error);\r\n    response.success = false;\r\n    response.errors.push(error.message);\r\n    if (error.status !== undefined)\r\n      return json(response, {\r\n        status: error.status,\r\n        headers: {\r\n          \"Set-Cookie\": await commitSession(session),\r\n        },\r\n      });\r\n  }\r\n\r\n  return json(response);\r\n};\r\n\r\nexport const handleSignOutSession = async (\r\n  request: Request,\r\n  redirectTo: string = \"/\"\r\n) => {\r\n  const session = await getSession(request.headers.get(\"Cookie\"));\r\n  return redirect(redirectTo, {\r\n    headers: {\r\n      \"Set-Cookie\": await destroySession(session),\r\n    },\r\n  });\r\n};\r\n\r\nexport const handleCreateUser = async (\r\n  request: Request,\r\n  {\r\n    email,\r\n    password,\r\n  }: {\r\n    email: string;\r\n    password: string;\r\n  },\r\n  successRedirect: string = \"/\"\r\n): Promise<Response> => {\r\n  const { data, error } = await supabaseAdmin.auth.api.createUser({\r\n    email,\r\n    password,\r\n    email_confirm: true,\r\n  });\r\n\r\n  if (error) {\r\n    return handleResponse(request, { data, error });\r\n  }\r\n\r\n  return redirect(successRedirect);\r\n};\r\n\r\nexport const handleSignInWithEmailAndPassword = async (\r\n  request: Request,\r\n  {\r\n    email,\r\n    password,\r\n  }: {\r\n    email: string;\r\n    password: string;\r\n  },\r\n  successRedirect: string = \"/\"\r\n): Promise<Response> => {\r\n  const { data, error } = await supabaseClient.auth.api.signInWithEmail(\r\n    email,\r\n    password\r\n  );\r\n\r\n  const session = await getCookieSession(request);\r\n\r\n  if (error) {\r\n    return handleResponse(request, { data, error });\r\n  }\r\n\r\n  session.set(sessionKey, data);\r\n\r\n  return redirect(successRedirect, {\r\n    headers: {\r\n      \"Set-Cookie\": await commitSession(session),\r\n    },\r\n  });\r\n};\r\n\r\nexport async function handleAuthSession(\r\n  request: Request,\r\n  successRedirect?: string,\r\n  auth: boolean = true\r\n): Promise<{\r\n  session: NodeSession;\r\n  sessionData: Session | null;\r\n  supabaseClient: SupabaseClient;\r\n}> {\r\n  const url = new URL(request.url);\r\n  const pathname = url.pathname;\r\n  const isLoginPath = pathname === \"/login\";\r\n\r\n  const session = await getCookieSession(request);\r\n  const authSessionData = session.get(sessionKey);\r\n\r\n  const isSessionExpired = authSessionData\r\n    ? Date.now() / 1000 > authSessionData?.expires_at!\r\n    : true;\r\n\r\n  if (!authSessionData || isSessionExpired) {\r\n    if (!isLoginPath && auth) {\r\n      throw redirect(\"/login\");\r\n    } else {\r\n      return { session, supabaseClient, sessionData: authSessionData };\r\n    }\r\n  }\r\n\r\n  if (successRedirect) {\r\n    throw redirect(successRedirect);\r\n  }\r\n\r\n  const supabaseClientSession = await supabaseClient.auth.setAuth(\r\n    authSessionData?.access_token!\r\n  );\r\n  session.set(sessionKey, supabaseClientSession);\r\n\r\n  return { session, sessionData: supabaseClientSession, supabaseClient };\r\n}\r\n", "import type { ActionFunction, LoaderFunction } from \"@remix-run/node\";\r\nimport { Form, useActionData } from \"@remix-run/react\";\r\nimport { handleAuthSession, handleCreateUser } from \"~/auth.server\";\r\n\r\nexport const loader: LoaderFunction = async ({ request }) => {\r\n  await handleAuthSession(request, \"/notes\", false);\r\n  return null;\r\n};\r\n\r\nexport const action: ActionFunction = async ({ request }) => {\r\n  const formData = await request.formData();\r\n\r\n  const email = formData.get(\"email\") as string;\r\n  const password = formData.get(\"password\") as string;\r\n\r\n  return handleCreateUser(request, { email, password }, \"/check-email\");\r\n};\r\n\r\nexport default function SignUp() {\r\n  const actionData = useActionData();\r\n\r\n  return (\r\n    <div>\r\n      <h1>SignUp</h1>\r\n      <p>{actionData?.errorMessage}</p>\r\n      <Form method=\"post\">\r\n        <div>\r\n          <label htmlFor=\"email\">Email: </label>\r\n          <input\r\n            type=\"email\"\r\n            id=\"email\"\r\n            name=\"email\"\r\n            defaultValue=\"amir.zahlan@gmail.com\"\r\n          />\r\n        </div>\r\n        <div>\r\n          <label htmlFor=\"password\">Password: </label>\r\n          <input\r\n            type=\"password\"\r\n            id=\"password\"\r\n            name=\"password\"\r\n            defaultValue=\"123456\"\r\n          />\r\n        </div>\r\n        <button>Submit</button>\r\n      </Form>\r\n      {/* <fetcher.Form method=\"post\" action=\"/auth-actions/invite\">\r\n        <div>\r\n          <input\r\n            type=\"email\"\r\n            id=\"email\"\r\n            name=\"email\"\r\n            defaultValue=\"amir.zahlan@gmail.com\"\r\n            hidden\r\n          />\r\n        </div>\r\n        <button>Resend email</button>\r\n      </fetcher.Form> */}\r\n    </div>\r\n  );\r\n}\r\n", "export default function CheckEmail() {\r\n  return (\r\n    <div>\r\n      <h1>Please, check you email to confirm your registration.</h1>\r\n    </div>\r\n  );\r\n}\r\n", "export default function Index() {\r\n  return (\r\n    <div>\r\n      <h1>Welcome to tecno-brega-stack!</h1>\r\n    </div>\r\n  );\r\n}\r\n", "import type { ActionFunction, LoaderFunction } from \"@remix-run/node\";\r\nimport { Form, useActionData, useCatch } from \"@remix-run/react\";\r\nimport {\r\n  handleAuthSession,\r\n  handleSignInWithEmailAndPassword,\r\n} from \"~/auth.server\";\r\n\r\nexport const loader: LoaderFunction = async ({ request }) => {\r\n  await handleAuthSession(request, \"/notes\", false);\r\n  return null;\r\n};\r\n\r\nexport const action: ActionFunction = async ({ request }) => {\r\n  const formData = await request.formData();\r\n\r\n  const email = formData.get(\"email\") as string;\r\n  const password = formData.get(\"password\") as string;\r\n\r\n  return handleSignInWithEmailAndPassword(\r\n    request,\r\n    {\r\n      email,\r\n      password,\r\n    },\r\n    \"/notes\"\r\n  );\r\n};\r\n\r\nexport default function SignIn() {\r\n  const actionData = useActionData();\r\n\r\n  return (\r\n    <div>\r\n      <h1>SignIn</h1>\r\n      <p>{actionData?.errorMessage}</p>\r\n      <Form method=\"post\">\r\n        <div>\r\n          <label htmlFor=\"email\">Email: </label>\r\n          <input\r\n            type=\"email\"\r\n            id=\"email\"\r\n            name=\"email\"\r\n            defaultValue=\"amir.zahlan@gmail.com\"\r\n            autoComplete=\"on\"\r\n          />\r\n        </div>\r\n        <div>\r\n          <label htmlFor=\"password\">Password: </label>\r\n          <input\r\n            type=\"password\"\r\n            id=\"password\"\r\n            name=\"password\"\r\n            defaultValue=\"123\"\r\n            autoComplete=\"on\"\r\n          />\r\n        </div>\r\n        <button>Submit</button>\r\n      </Form>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport function CatchBoundary() {\r\n  const caught = useCatch();\r\n  console.log(\"a\", caught);\r\n\r\n  return (\r\n    <div>\r\n      <h1>Caught</h1>\r\n      <p>Status: {caught.status}</p>\r\n      <pre>\r\n        <code>{JSON.stringify(caught.data, null, 2)}</code>\r\n      </pre>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport function ErrorBoundary({ error }: { error: Error }) {\r\n  console.log(\"a\", error);\r\n\r\n  return (\r\n    <div>\r\n      <h1>Error</h1>\r\n      <p>{error.message}</p>\r\n      <p>The stack trace is:</p>\r\n      <pre>{error.stack}</pre>\r\n    </div>\r\n  );\r\n}\r\n", "import type { ActionFunction, LoaderFunction } from \"@remix-run/node\";\r\nimport { Form, useLoaderData } from \"@remix-run/react\";\r\nimport { handleAuthSession, handleResponse } from \"~/auth.server\";\r\n\r\nexport const loader: LoaderFunction = async ({ request }) => {\r\n  const { supabaseClient } = await handleAuthSession(request);\r\n\r\n  const { data, error } = await supabaseClient.from(\"notes\").select();\r\n\r\n  return handleResponse(request, { data, error });\r\n};\r\n\r\nexport const action: ActionFunction = async ({ request }) => {\r\n  const { supabaseClient } = await handleAuthSession(request);\r\n\r\n  const form = await request.formData();\r\n  const content = form.get(\"content\");\r\n\r\n  const { error } = await supabaseClient.from(\"notes\").insert([{ content }], {\r\n    returning: \"minimal\",\r\n  });\r\n\r\n  return handleResponse(request, { data: null, error });\r\n};\r\n\r\nexport default function Notes() {\r\n  const { data: notes } = useLoaderData();\r\n  return (\r\n    <div>\r\n      <h1>Notes</h1>\r\n      <Form method=\"post\">\r\n        <input type=\"text\" name=\"content\" />\r\n        <button>Create note</button>\r\n      </Form>\r\n      {notes && (\r\n        <>\r\n          <h2>Notes</h2>\r\n          <ul>\r\n            {notes.map((note: any) => (\r\n              <li key={note.id}>{note.content}</li>\r\n            ))}\r\n          </ul>\r\n        </>\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n", "export default {'version':'f5319089','entry':{'module':'/build/entry.client-KUTWUDKR.js','imports':['/build/_shared/chunk-QN4PJA3K.js','/build/_shared/chunk-IYRIQ6PI.js']},'routes':{'root':{'id':'root','parentId':undefined,'path':'','index':undefined,'caseSensitive':undefined,'module':'/build/root-GU5CUKYJ.js','imports':undefined,'hasAction':false,'hasLoader':false,'hasCatchBoundary':false,'hasErrorBoundary':false},'routes/auth-actions/invite':{'id':'routes/auth-actions/invite','parentId':'root','path':'auth-actions/invite','index':undefined,'caseSensitive':undefined,'module':'/build/routes/auth-actions/invite-4R5GGSFF.js','imports':undefined,'hasAction':true,'hasLoader':false,'hasCatchBoundary':false,'hasErrorBoundary':false},'routes/auth-actions/logout':{'id':'routes/auth-actions/logout','parentId':'root','path':'auth-actions/logout','index':undefined,'caseSensitive':undefined,'module':'/build/routes/auth-actions/logout-DDNPAAE5.js','imports':undefined,'hasAction':true,'hasLoader':false,'hasCatchBoundary':false,'hasErrorBoundary':false},'routes/auth-actions/refresh-token':{'id':'routes/auth-actions/refresh-token','parentId':'root','path':'auth-actions/refresh-token','index':undefined,'caseSensitive':undefined,'module':'/build/routes/auth-actions/refresh-token-3F55CRS5.js','imports':undefined,'hasAction':true,'hasLoader':false,'hasCatchBoundary':false,'hasErrorBoundary':false},'routes/auth-actions/reset-password':{'id':'routes/auth-actions/reset-password','parentId':'root','path':'auth-actions/reset-password','index':undefined,'caseSensitive':undefined,'module':'/build/routes/auth-actions/reset-password-BHKC7OAH.js','imports':undefined,'hasAction':true,'hasLoader':false,'hasCatchBoundary':false,'hasErrorBoundary':false},'routes/check-email':{'id':'routes/check-email','parentId':'root','path':'check-email','index':undefined,'caseSensitive':undefined,'module':'/build/routes/check-email-XZCZP3NK.js','imports':undefined,'hasAction':false,'hasLoader':false,'hasCatchBoundary':false,'hasErrorBoundary':false},'routes/create-account':{'id':'routes/create-account','parentId':'root','path':'create-account','index':undefined,'caseSensitive':undefined,'module':'/build/routes/create-account-NHGGAKZL.js','imports':['/build/_shared/chunk-OOJROMFZ.js'],'hasAction':true,'hasLoader':true,'hasCatchBoundary':false,'hasErrorBoundary':false},'routes/index':{'id':'routes/index','parentId':'root','path':undefined,'index':true,'caseSensitive':undefined,'module':'/build/routes/index-P7UCKN6F.js','imports':undefined,'hasAction':false,'hasLoader':false,'hasCatchBoundary':false,'hasErrorBoundary':false},'routes/login':{'id':'routes/login','parentId':'root','path':'login','index':undefined,'caseSensitive':undefined,'module':'/build/routes/login-3JYAYOCA.js','imports':['/build/_shared/chunk-OOJROMFZ.js'],'hasAction':true,'hasLoader':true,'hasCatchBoundary':true,'hasErrorBoundary':true},'routes/notes':{'id':'routes/notes','parentId':'root','path':'notes','index':undefined,'caseSensitive':undefined,'module':'/build/routes/notes-WAMERGL3.js','imports':['/build/_shared/chunk-OOJROMFZ.js'],'hasAction':true,'hasLoader':true,'hasCatchBoundary':false,'hasErrorBoundary':false}},'url':'/build/manifest-F5319089.js'};", "\nimport * as entryServer from \"C:\\\\Users\\\\Amir_\\\\Projetos\\\\reactCode\\\\remix-supabase-starter\\\\app\\\\entry.server.tsx\";\nimport * as route0 from \"C:\\\\Users\\\\Amir_\\\\Projetos\\\\reactCode\\\\remix-supabase-starter\\\\app\\\\root.tsx\";\nimport * as route1 from \"C:\\\\Users\\\\Amir_\\\\Projetos\\\\reactCode\\\\remix-supabase-starter\\\\app\\\\routes\\\\auth-actions\\\\reset-password.tsx\";\nimport * as route2 from \"C:\\\\Users\\\\Amir_\\\\Projetos\\\\reactCode\\\\remix-supabase-starter\\\\app\\\\routes\\\\auth-actions\\\\refresh-token.tsx\";\nimport * as route3 from \"C:\\\\Users\\\\Amir_\\\\Projetos\\\\reactCode\\\\remix-supabase-starter\\\\app\\\\routes\\\\auth-actions\\\\invite.tsx\";\nimport * as route4 from \"C:\\\\Users\\\\Amir_\\\\Projetos\\\\reactCode\\\\remix-supabase-starter\\\\app\\\\routes\\\\auth-actions\\\\logout.tsx\";\nimport * as route5 from \"C:\\\\Users\\\\Amir_\\\\Projetos\\\\reactCode\\\\remix-supabase-starter\\\\app\\\\routes\\\\create-account.tsx\";\nimport * as route6 from \"C:\\\\Users\\\\Amir_\\\\Projetos\\\\reactCode\\\\remix-supabase-starter\\\\app\\\\routes\\\\check-email.tsx\";\nimport * as route7 from \"C:\\\\Users\\\\Amir_\\\\Projetos\\\\reactCode\\\\remix-supabase-starter\\\\app\\\\routes\\\\index.tsx\";\nimport * as route8 from \"C:\\\\Users\\\\Amir_\\\\Projetos\\\\reactCode\\\\remix-supabase-starter\\\\app\\\\routes\\\\login.tsx\";\nimport * as route9 from \"C:\\\\Users\\\\Amir_\\\\Projetos\\\\reactCode\\\\remix-supabase-starter\\\\app\\\\routes\\\\notes.tsx\";\n  export { default as assets } from \"@remix-run/dev/assets-manifest\";\n  export const entry = { module: entryServer };\n  export const routes = {\n    \"root\": {\n      id: \"root\",\n      parentId: undefined,\n      path: \"\",\n      index: undefined,\n      caseSensitive: undefined,\n      module: route0\n    },\n  \"routes/auth-actions/reset-password\": {\n      id: \"routes/auth-actions/reset-password\",\n      parentId: \"root\",\n      path: \"auth-actions/reset-password\",\n      index: undefined,\n      caseSensitive: undefined,\n      module: route1\n    },\n  \"routes/auth-actions/refresh-token\": {\n      id: \"routes/auth-actions/refresh-token\",\n      parentId: \"root\",\n      path: \"auth-actions/refresh-token\",\n      index: undefined,\n      caseSensitive: undefined,\n      module: route2\n    },\n  \"routes/auth-actions/invite\": {\n      id: \"routes/auth-actions/invite\",\n      parentId: \"root\",\n      path: \"auth-actions/invite\",\n      index: undefined,\n      caseSensitive: undefined,\n      module: route3\n    },\n  \"routes/auth-actions/logout\": {\n      id: \"routes/auth-actions/logout\",\n      parentId: \"root\",\n      path: \"auth-actions/logout\",\n      index: undefined,\n      caseSensitive: undefined,\n      module: route4\n    },\n  \"routes/create-account\": {\n      id: \"routes/create-account\",\n      parentId: \"root\",\n      path: \"create-account\",\n      index: undefined,\n      caseSensitive: undefined,\n      module: route5\n    },\n  \"routes/check-email\": {\n      id: \"routes/check-email\",\n      parentId: \"root\",\n      path: \"check-email\",\n      index: undefined,\n      caseSensitive: undefined,\n      module: route6\n    },\n  \"routes/index\": {\n      id: \"routes/index\",\n      parentId: \"root\",\n      path: undefined,\n      index: true,\n      caseSensitive: undefined,\n      module: route7\n    },\n  \"routes/login\": {\n      id: \"routes/login\",\n      parentId: \"root\",\n      path: \"login\",\n      index: undefined,\n      caseSensitive: undefined,\n      module: route8\n    },\n  \"routes/notes\": {\n      id: \"routes/notes\",\n      parentId: \"root\",\n      path: \"notes\",\n      index: undefined,\n      caseSensitive: undefined,\n      module: route9\n    }\n  };"],
  "mappings": "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",
  "names": []
}
