{
  "version": 3,
  "sources": ["<stdin>", "../node_modules/@remix-run/dev/compiler/shims/react.ts", "../app/entry.server.tsx", "C:\\Users\\Amir_\\Projetos\\reactCode\\remix-supabase-starter\\app\\root.tsx", "../app/auth.server.ts", "../app/session.server.ts", "../app/supabase.server.ts", "../app/components/Navigation.tsx", "C:\\Users\\Amir_\\Projetos\\reactCode\\remix-supabase-starter\\app\\routes\\auth-actions\\logout.tsx", "C:\\Users\\Amir_\\Projetos\\reactCode\\remix-supabase-starter\\app\\routes\\forgot-password.tsx", "C:\\Users\\Amir_\\Projetos\\reactCode\\remix-supabase-starter\\app\\routes\\create-account.tsx", "C:\\Users\\Amir_\\Projetos\\reactCode\\remix-supabase-starter\\app\\routes\\reset-password.tsx", "C:\\Users\\Amir_\\Projetos\\reactCode\\remix-supabase-starter\\app\\routes\\notes\\index.tsx", "C:\\Users\\Amir_\\Projetos\\reactCode\\remix-supabase-starter\\app\\routes\\index.tsx", "C:\\Users\\Amir_\\Projetos\\reactCode\\remix-supabase-starter\\app\\routes\\login.tsx", "server-assets-manifest:@remix-run/dev/assets-manifest", "server-entry-module:@remix-run/dev/server-build"],
  "sourcesContent": ["export * from \"@remix-run/dev/server-build\";", "// eslint-disable-next-line import/no-extraneous-dependencies\nimport * as React from \"react\";\nexport { React };\n", "import type { EntryContext } from \"@remix-run/node\";\nimport { RemixServer } from \"@remix-run/react\";\nimport { renderToString } from \"react-dom/server\";\n\nexport default function handleRequest(\n  request: Request,\n  responseStatusCode: number,\n  responseHeaders: Headers,\n  remixContext: EntryContext\n) {\n  let markup = renderToString(\n    <RemixServer context={remixContext} url={request.url} />\n  );\n\n  responseHeaders.set(\"Content-Type\", \"text/html\");\n\n  return new Response(\"<!DOCTYPE html>\" + markup, {\n    status: responseStatusCode,\n    headers: responseHeaders,\n  });\n}\n", "import type { LoaderFunction, MetaFunction } from \"@remix-run/node\";\r\nimport {\r\n  Links,\r\n  LiveReload,\r\n  Meta,\r\n  Outlet,\r\n  Scripts,\r\n  ScrollRestoration,\r\n  useLoaderData,\r\n} from \"@remix-run/react\";\r\nimport { isAuthenticated } from \"./auth.server\";\r\nimport Navigation from \"./components/Navigation\";\r\n\r\nexport const meta: MetaFunction = () => ({\r\n  charset: \"utf-8\",\r\n  title: \"Tecno Brega Stack\",\r\n  viewport: \"width=device-width,initial-scale=1\",\r\n});\r\n\r\nexport const loader: LoaderFunction = async ({ request }) => {\r\n  return {\r\n    isAuthenticated: await isAuthenticated(request),\r\n  };\r\n};\r\n\r\nexport default function App() {\r\n  const { isAuthenticated } = useLoaderData();\r\n\r\n  return (\r\n    <html lang=\"en\">\r\n      <head>\r\n        <Meta />\r\n        <Links />\r\n      </head>\r\n      <body>\r\n        <Navigation isAuthenticated={isAuthenticated} />\r\n        <Outlet context={{ isAuthenticated }} />\r\n        <ScrollRestoration />\r\n        <Scripts />\r\n        <LiveReload />\r\n      </body>\r\n    </html>\r\n  );\r\n}\r\n", "import { json, redirect } from \"@remix-run/node\";\r\nimport type {\r\n  ApiError,\r\n  Session,\r\n  SupabaseClient,\r\n  User,\r\n} from \"@supabase/supabase-js\";\r\nimport type { Session as NodeSession } from \"@remix-run/node\";\r\nimport {\r\n  commitSession,\r\n  destroySession,\r\n  getSession,\r\n  sessionKey,\r\n} from \"./session.server\";\r\nimport { supabaseAdmin, supabaseClient } from \"./supabase.server\";\r\nimport type { BaseResponse } from \"./types\";\r\n\r\nexport const getCookieSession = async (\r\n  request: Request\r\n): Promise<NodeSession> => {\r\n  return await getSession(request.headers.get(\"Cookie\"));\r\n};\r\n\r\nexport async function getUser(accessToken: string): Promise<{\r\n  user: User | null;\r\n  data: User | null;\r\n  error: ApiError | null;\r\n}> {\r\n  return await supabaseClient.auth.api.getUser(accessToken);\r\n}\r\n\r\nexport async function isAuthenticated(request: Request): Promise<boolean> {\r\n  const session = await getCookieSession(request);\r\n  const authSessionData = session.get(sessionKey);\r\n\r\n  const isSessionExpired = authSessionData\r\n    ? Date.now() / 1000 > authSessionData?.expires_at!\r\n    : true;\r\n\r\n  if (!authSessionData || !authSessionData.access_token || isSessionExpired) {\r\n    return false;\r\n  }\r\n\r\n  return true;\r\n}\r\n\r\nexport const handleSignOutSession = async (\r\n  request: Request,\r\n  redirectTo: string = \"/\"\r\n) => {\r\n  const session = await getSession(request.headers.get(\"Cookie\"));\r\n  return redirect(redirectTo, {\r\n    headers: {\r\n      \"Set-Cookie\": await destroySession(session),\r\n    },\r\n  });\r\n};\r\n\r\nexport const handleForgotPassword = async (\r\n  request: Request,\r\n  email: string\r\n): Promise<Response> => {\r\n  const { data, error } = await supabaseClient.auth.api.resetPasswordForEmail(\r\n    email,\r\n    {\r\n      redirectTo: `${process.env.SERVER_URL}/reset-password`,\r\n    }\r\n  );\r\n  return handleResponse(request, { data, error });\r\n};\r\n\r\nexport const handleResetPassword = async (\r\n  request: Request,\r\n  { accessToken, newPassword }: { accessToken: string; newPassword: string }\r\n): Promise<Response> => {\r\n  const { data, error } = await supabaseClient.auth.api.updateUser(\r\n    accessToken,\r\n    {\r\n      password: newPassword,\r\n    }\r\n  );\r\n  return handleResponse(request, { data, error });\r\n};\r\n\r\nexport const handleResponse = async (\r\n  request: Request,\r\n  {\r\n    data,\r\n    error,\r\n  }: {\r\n    data: any;\r\n    error: any;\r\n  }\r\n): Promise<Response> => {\r\n  const session = await getCookieSession(request);\r\n  const response: BaseResponse = {\r\n    success: true,\r\n    data: null,\r\n    errors: [],\r\n  };\r\n  response.data = data;\r\n  if (error) {\r\n    session.flash(\"error\", error);\r\n    response.success = false;\r\n    response.errors.push(error.message);\r\n    if (error.status !== undefined)\r\n      return json(response, {\r\n        status: error.status,\r\n        headers: {\r\n          \"Set-Cookie\": await commitSession(session),\r\n        },\r\n      });\r\n  }\r\n\r\n  return json(response);\r\n};\r\n\r\nexport const handleCreateUser = async (\r\n  request: Request,\r\n  {\r\n    email,\r\n    password,\r\n  }: {\r\n    email: string;\r\n    password: string;\r\n  }\r\n): Promise<Response> => {\r\n  const { data, error } = await supabaseAdmin.auth.api.createUser({\r\n    email,\r\n    password,\r\n    email_confirm: true,\r\n  });\r\n\r\n  return handleResponse(request, { data, error });\r\n};\r\n\r\nexport const handleSignInWithEmailAndPassword = async (\r\n  request: Request,\r\n  {\r\n    email,\r\n    password,\r\n  }: {\r\n    email: string;\r\n    password: string;\r\n  },\r\n  successRedirect: string = \"/\"\r\n): Promise<Response> => {\r\n  const { data, error } = await supabaseClient.auth.api.signInWithEmail(\r\n    email,\r\n    password\r\n  );\r\n\r\n  const session = await getCookieSession(request);\r\n\r\n  if (error) {\r\n    return handleResponse(request, { data, error });\r\n  }\r\n\r\n  session.set(sessionKey, data);\r\n\r\n  return redirect(successRedirect, {\r\n    headers: {\r\n      \"Set-Cookie\": await commitSession(session),\r\n    },\r\n  });\r\n};\r\n\r\nexport async function handleAuthSession(\r\n  request: Request,\r\n  successRedirect?: string,\r\n  auth: boolean = true\r\n): Promise<{\r\n  session: NodeSession;\r\n  sessionData: Session | null;\r\n  supabaseClient: SupabaseClient;\r\n}> {\r\n  const url = new URL(request.url);\r\n  const pathname = url.pathname;\r\n  const isLoginPath = pathname === \"/login\";\r\n\r\n  const session = await getCookieSession(request);\r\n  const authSessionData = session.get(sessionKey);\r\n\r\n  const isSessionExpired = authSessionData\r\n    ? Date.now() / 1000 > authSessionData?.expires_at!\r\n    : true;\r\n\r\n  if (!authSessionData || isSessionExpired) {\r\n    if (!isLoginPath && auth) {\r\n      throw redirect(\"/login\");\r\n    } else {\r\n      return { session, supabaseClient, sessionData: authSessionData };\r\n    }\r\n  }\r\n\r\n  if (successRedirect) {\r\n    throw redirect(successRedirect);\r\n  }\r\n\r\n  const supabaseClientSession = await supabaseClient.auth.setAuth(\r\n    authSessionData?.access_token!\r\n  );\r\n  session.set(sessionKey, supabaseClientSession);\r\n\r\n  return { session, sessionData: supabaseClientSession, supabaseClient };\r\n}\r\n", "import { createCookieSessionStorage } from \"@remix-run/node\";\r\n\r\nif (!process.env.SESSION_SECRET) {\r\n  throw Error(\"SESSION_SECRET must be set\");\r\n}\r\n\r\nif (!process.env.SERVER_URL) {\r\n  throw Error(\"SERVER_URL must be set\");\r\n}\r\n\r\nexport const sessionKey = process.env.SESSION_KEY || \"__supabase_session\";\r\n\r\nexport const { getSession, commitSession, destroySession } =\r\n  createCookieSessionStorage({\r\n    cookie: {\r\n      name: sessionKey,\r\n\r\n      httpOnly: true,\r\n      path: \"/\",\r\n      sameSite: \"lax\",\r\n      secrets: [process.env.SESSION_SECRET],\r\n      secure: process.env.NODE_ENV === \"production\",\r\n    },\r\n  });\r\n", "import { createClient } from \"@supabase/supabase-js\";\r\n\r\ndeclare global {\r\n  namespace NodeJS {\r\n    interface ProcessEnv {\r\n      SERVER_URL: string;\r\n      SUPABASE_URL: string;\r\n      SUPABASE_ANON_KEY: string;\r\n      SUPABASE_SERVICE_ROLE_KEY: string;\r\n    }\r\n  }\r\n}\r\n\r\nif (!process.env.SUPABASE_URL) throw new Error(\"ENV: SUPABASE_URL is required\");\r\n\r\nif (!process.env.SUPABASE_ANON_KEY)\r\n  throw new Error(\"ENV: SUPABASE_ANON_KEY is required\");\r\n\r\nif (!process.env.SUPABASE_SERVICE_ROLE_KEY)\r\n  throw new Error(\"ENV: SUPABASE_SERVICE_ROLE_KEY is required\");\r\n\r\nexport const supabaseAdmin = createClient(\r\n  process.env.SUPABASE_URL,\r\n  process.env.SUPABASE_SERVICE_ROLE_KEY\r\n);\r\n\r\nexport const supabaseClient = createClient(\r\n  process.env.SUPABASE_URL,\r\n  process.env.SUPABASE_ANON_KEY,\r\n  { autoRefreshToken: false, persistSession: false }\r\n);\r\n", "import { Form, NavLink } from \"@remix-run/react\";\r\n\r\nexport default function Navigation({\r\n  isAuthenticated,\r\n}: {\r\n  isAuthenticated: boolean;\r\n}) {\r\n  return (\r\n    <nav style={{ display: \"flex\", gap: \"1rem\" }}>\r\n      <NavLink to=\"/\">Home</NavLink>\r\n      {!isAuthenticated && (\r\n        <>\r\n          <NavLink to=\"/login\">Login</NavLink>\r\n          <NavLink to=\"/create-account\">Create account</NavLink>\r\n        </>\r\n      )}\r\n      {isAuthenticated && (\r\n        <>\r\n          <NavLink to=\"/notes\">Notes</NavLink>\r\n          <Form method=\"post\" action=\"/auth-actions/logout\">\r\n            <button>Logout</button>\r\n          </Form>\r\n        </>\r\n      )}\r\n    </nav>\r\n  );\r\n}\r\n", "import type { ActionFunction } from \"@remix-run/node\";\r\nimport { handleSignOutSession } from \"~/auth.server\";\r\n\r\nexport const action: ActionFunction = async ({ request }) => {\r\n  return handleSignOutSession(request, \"/\");\r\n};\r\n", "import { Form, useActionData } from \"@remix-run/react\";\r\nimport { handleForgotPassword } from \"~/auth.server\";\r\nimport type { ActionFunction } from \"@remix-run/node\";\r\nimport type { BaseResponse } from \"~/types\";\r\n\r\nexport const action: ActionFunction = async ({ request }) => {\r\n  const formData = await request.formData();\r\n  const email = formData.get(\"email\") as string;\r\n  return handleForgotPassword(request, email);\r\n};\r\n\r\nexport default function ForgotPassword() {\r\n  const actionData = useActionData<BaseResponse>();\r\n\r\n  if (actionData?.success) {\r\n    return (\r\n      <div>\r\n        <h1>Please, check you email to continue with the password reset.</h1>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      <h1>Forgot Password</h1>\r\n      {actionData?.errors.map((error) => (\r\n        <p key={error}>{error}</p>\r\n      ))}\r\n      <Form method=\"post\">\r\n        <div>\r\n          <label htmlFor=\"email\">Email: </label>\r\n          <input type=\"email\" name=\"email\" autoComplete=\"on\" />\r\n        </div>\r\n        <br />\r\n        <button>Submit</button>\r\n      </Form>\r\n    </div>\r\n  );\r\n}\r\n", "import type { ActionFunction, LoaderFunction } from \"@remix-run/node\";\r\nimport { Form, useActionData } from \"@remix-run/react\";\r\nimport { handleAuthSession, handleCreateUser } from \"~/auth.server\";\r\n\r\nexport const loader: LoaderFunction = async ({ request }) => {\r\n  await handleAuthSession(request, \"/notes\", false);\r\n  return null;\r\n};\r\n\r\nexport const action: ActionFunction = async ({ request }) => {\r\n  const formData = await request.formData();\r\n\r\n  const email = formData.get(\"email\") as string;\r\n  const password = formData.get(\"password\") as string;\r\n\r\n  return handleCreateUser(request, { email, password });\r\n};\r\n\r\nexport default function SignUp() {\r\n  const actionData = useActionData();\r\n\r\n  if (actionData?.success) {\r\n    return (\r\n      <div>\r\n        <h1>Please, check you email to confirm your registration.</h1>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      <h1>SignUp</h1>\r\n      <p>{actionData?.errorMessage}</p>\r\n      <Form method=\"post\">\r\n        <div>\r\n          <label htmlFor=\"email\">Email: </label>\r\n          <input type=\"email\" name=\"email\" />\r\n        </div>\r\n        <div>\r\n          <label htmlFor=\"password\">Password: </label>\r\n          <input type=\"password\" name=\"password\" />\r\n        </div>\r\n        <br />\r\n        <button>Submit</button>\r\n      </Form>\r\n    </div>\r\n  );\r\n}\r\n", "import { Form, Link, useActionData, useLocation } from \"@remix-run/react\";\r\nimport { handleResetPassword } from \"~/auth.server\";\r\nimport type { ActionFunction } from \"@remix-run/node\";\r\nimport type { BaseResponse } from \"~/types\";\r\nimport { useState } from \"react\";\r\n\r\nexport const action: ActionFunction = async ({ request }) => {\r\n  const formData = await request.formData();\r\n  const accessToken = formData.get(\"access_token\") as string;\r\n  const newPassword = formData.get(\"new_password\") as string;\r\n  return handleResetPassword(request, {\r\n    accessToken,\r\n    newPassword,\r\n  });\r\n};\r\n\r\nexport default function ResetPassword() {\r\n  const actionData = useActionData<BaseResponse>();\r\n  const location = useLocation();\r\n\r\n  const params = new URLSearchParams(location.hash.substring(1));\r\n  const [accessToken] = useState(params.get(\"access_token\"));\r\n\r\n  if (actionData?.success) {\r\n    return (\r\n      <div>\r\n        <h1>\r\n          Password updated successfully! You can now login with your new\r\n          password.\r\n        </h1>\r\n        <Link to=\"/login\">Login</Link>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      <h1>Reset Password</h1>\r\n      {actionData?.errors.map((error) => (\r\n        <p key={error}>{error}</p>\r\n      ))}\r\n      <Form method=\"post\">\r\n        <div>\r\n          <input type=\"hidden\" name=\"access_token\" value={accessToken || \"\"} />\r\n        </div>\r\n        <div>\r\n          <label htmlFor=\"new_password\">New Password: </label>\r\n          <input type=\"password\" name=\"new_password\" autoComplete=\"on\" />\r\n        </div>\r\n        <br />\r\n        <button>Submit</button>\r\n      </Form>\r\n    </div>\r\n  );\r\n}\r\n", "import type { ActionFunction, LoaderFunction } from \"@remix-run/node\";\r\nimport { Form, useLoaderData } from \"@remix-run/react\";\r\nimport { handleAuthSession, handleResponse } from \"~/auth.server\";\r\n\r\nexport const loader: LoaderFunction = async ({ request }) => {\r\n  const { supabaseClient } = await handleAuthSession(request);\r\n\r\n  const { data, error } = await supabaseClient.from(\"notes\").select();\r\n\r\n  return handleResponse(request, { data, error });\r\n};\r\n\r\nexport const action: ActionFunction = async ({ request }) => {\r\n  const { supabaseClient } = await handleAuthSession(request);\r\n\r\n  const form = await request.formData();\r\n  const content = form.get(\"content\");\r\n\r\n  const { error } = await supabaseClient.from(\"notes\").insert([{ content }], {\r\n    returning: \"minimal\",\r\n  });\r\n\r\n  return handleResponse(request, { data: null, error });\r\n};\r\n\r\nexport default function Notes() {\r\n  const { data: notes } = useLoaderData();\r\n  return (\r\n    <div>\r\n      <h1>Notes</h1>\r\n      <Form method=\"post\">\r\n        <input type=\"text\" name=\"content\" />\r\n        <button>Create note</button>\r\n      </Form>\r\n      {notes && (\r\n        <>\r\n          <h2>Notes</h2>\r\n          <ul>\r\n            {notes.map((note: any) => (\r\n              <li key={note.id}>{note.content}</li>\r\n            ))}\r\n          </ul>\r\n        </>\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n", "export default function Index() {\r\n  return (\r\n    <div>\r\n      <h1>Welcome to tecno-brega-stack</h1>\r\n      <a\r\n        href=\"https://www.youtube.com/watch?v=gmQ3Yp2rizM\"\r\n        target=\"_blank\"\r\n        rel=\"noopener noreferrer\"\r\n      >\r\n        Just a sample of it\r\n      </a>\r\n    </div>\r\n  );\r\n}\r\n", "import type { ActionFunction, LoaderFunction } from \"@remix-run/node\";\r\nimport { Form, Link, useActionData } from \"@remix-run/react\";\r\nimport {\r\n  handleAuthSession,\r\n  handleSignInWithEmailAndPassword,\r\n} from \"~/auth.server\";\r\nimport type { BaseResponse } from \"~/types\";\r\n\r\nexport const loader: LoaderFunction = async ({ request }) => {\r\n  await handleAuthSession(request, \"/notes\", false);\r\n  return null;\r\n};\r\n\r\nexport const action: ActionFunction = async ({ request }) => {\r\n  const formData = await request.formData();\r\n\r\n  const email = formData.get(\"email\") as string;\r\n  const password = formData.get(\"password\") as string;\r\n\r\n  return handleSignInWithEmailAndPassword(\r\n    request,\r\n    {\r\n      email,\r\n      password,\r\n    },\r\n    \"/notes\"\r\n  );\r\n};\r\n\r\nexport default function SignIn() {\r\n  const actionData = useActionData<BaseResponse>();\r\n\r\n  return (\r\n    <div>\r\n      <h1>SignIn</h1>\r\n      {actionData?.errors.map((error) => (\r\n        <p key={error}>{error}</p>\r\n      ))}\r\n      <Form method=\"post\">\r\n        <div>\r\n          <label htmlFor=\"email\">Email: </label>\r\n          <input type=\"email\" name=\"email\" autoComplete=\"on\" />\r\n        </div>\r\n        <div>\r\n          <label htmlFor=\"password\">Password: </label>\r\n          <input type=\"password\" name=\"password\" autoComplete=\"on\" />\r\n        </div>\r\n        <br />\r\n        <button>Submit</button>\r\n      </Form>\r\n      <br />\r\n      <Link to=\"/forgot-password\">Forgot Password?</Link>\r\n    </div>\r\n  );\r\n}\r\n", "export default {'version':'8732b62c','entry':{'module':'/build/entry.client-Z4QGQTH5.js','imports':['/build/_shared/chunk-D64DID4Q.js','/build/_shared/chunk-IYRIQ6PI.js']},'routes':{'root':{'id':'root','parentId':undefined,'path':'','index':undefined,'caseSensitive':undefined,'module':'/build/root-B4I4DLWU.js','imports':undefined,'hasAction':false,'hasLoader':true,'hasCatchBoundary':false,'hasErrorBoundary':false},'routes/auth-actions/logout':{'id':'routes/auth-actions/logout','parentId':'root','path':'auth-actions/logout','index':undefined,'caseSensitive':undefined,'module':'/build/routes/auth-actions/logout-DDNPAAE5.js','imports':undefined,'hasAction':true,'hasLoader':false,'hasCatchBoundary':false,'hasErrorBoundary':false},'routes/create-account':{'id':'routes/create-account','parentId':'root','path':'create-account','index':undefined,'caseSensitive':undefined,'module':'/build/routes/create-account-WGTSSKIQ.js','imports':['/build/_shared/chunk-OOJROMFZ.js'],'hasAction':true,'hasLoader':true,'hasCatchBoundary':false,'hasErrorBoundary':false},'routes/forgot-password':{'id':'routes/forgot-password','parentId':'root','path':'forgot-password','index':undefined,'caseSensitive':undefined,'module':'/build/routes/forgot-password-L2ZBZLGX.js','imports':['/build/_shared/chunk-OOJROMFZ.js'],'hasAction':true,'hasLoader':false,'hasCatchBoundary':false,'hasErrorBoundary':false},'routes/index':{'id':'routes/index','parentId':'root','path':undefined,'index':true,'caseSensitive':undefined,'module':'/build/routes/index-SVEMKWN4.js','imports':undefined,'hasAction':false,'hasLoader':false,'hasCatchBoundary':false,'hasErrorBoundary':false},'routes/login':{'id':'routes/login','parentId':'root','path':'login','index':undefined,'caseSensitive':undefined,'module':'/build/routes/login-II4X7U4F.js','imports':['/build/_shared/chunk-OOJROMFZ.js'],'hasAction':true,'hasLoader':true,'hasCatchBoundary':false,'hasErrorBoundary':false},'routes/notes/index':{'id':'routes/notes/index','parentId':'root','path':'notes','index':true,'caseSensitive':undefined,'module':'/build/routes/notes/index-QRS5SXAM.js','imports':['/build/_shared/chunk-OOJROMFZ.js'],'hasAction':true,'hasLoader':true,'hasCatchBoundary':false,'hasErrorBoundary':false},'routes/reset-password':{'id':'routes/reset-password','parentId':'root','path':'reset-password','index':undefined,'caseSensitive':undefined,'module':'/build/routes/reset-password-R2PFWAC2.js','imports':['/build/_shared/chunk-OOJROMFZ.js'],'hasAction':true,'hasLoader':false,'hasCatchBoundary':false,'hasErrorBoundary':false}},'url':'/build/manifest-8732B62C.js'};", "\nimport * as entryServer from \"C:\\\\Users\\\\Amir_\\\\Projetos\\\\reactCode\\\\remix-supabase-starter\\\\app\\\\entry.server.tsx\";\nimport * as route0 from \"C:\\\\Users\\\\Amir_\\\\Projetos\\\\reactCode\\\\remix-supabase-starter\\\\app\\\\root.tsx\";\nimport * as route1 from \"C:\\\\Users\\\\Amir_\\\\Projetos\\\\reactCode\\\\remix-supabase-starter\\\\app\\\\routes\\\\auth-actions\\\\logout.tsx\";\nimport * as route2 from \"C:\\\\Users\\\\Amir_\\\\Projetos\\\\reactCode\\\\remix-supabase-starter\\\\app\\\\routes\\\\forgot-password.tsx\";\nimport * as route3 from \"C:\\\\Users\\\\Amir_\\\\Projetos\\\\reactCode\\\\remix-supabase-starter\\\\app\\\\routes\\\\create-account.tsx\";\nimport * as route4 from \"C:\\\\Users\\\\Amir_\\\\Projetos\\\\reactCode\\\\remix-supabase-starter\\\\app\\\\routes\\\\reset-password.tsx\";\nimport * as route5 from \"C:\\\\Users\\\\Amir_\\\\Projetos\\\\reactCode\\\\remix-supabase-starter\\\\app\\\\routes\\\\notes\\\\index.tsx\";\nimport * as route6 from \"C:\\\\Users\\\\Amir_\\\\Projetos\\\\reactCode\\\\remix-supabase-starter\\\\app\\\\routes\\\\index.tsx\";\nimport * as route7 from \"C:\\\\Users\\\\Amir_\\\\Projetos\\\\reactCode\\\\remix-supabase-starter\\\\app\\\\routes\\\\login.tsx\";\n  export { default as assets } from \"@remix-run/dev/assets-manifest\";\n  export const entry = { module: entryServer };\n  export const routes = {\n    \"root\": {\n      id: \"root\",\n      parentId: undefined,\n      path: \"\",\n      index: undefined,\n      caseSensitive: undefined,\n      module: route0\n    },\n  \"routes/auth-actions/logout\": {\n      id: \"routes/auth-actions/logout\",\n      parentId: \"root\",\n      path: \"auth-actions/logout\",\n      index: undefined,\n      caseSensitive: undefined,\n      module: route1\n    },\n  \"routes/forgot-password\": {\n      id: \"routes/forgot-password\",\n      parentId: \"root\",\n      path: \"forgot-password\",\n      index: undefined,\n      caseSensitive: undefined,\n      module: route2\n    },\n  \"routes/create-account\": {\n      id: \"routes/create-account\",\n      parentId: \"root\",\n      path: \"create-account\",\n      index: undefined,\n      caseSensitive: undefined,\n      module: route3\n    },\n  \"routes/reset-password\": {\n      id: \"routes/reset-password\",\n      parentId: \"root\",\n      path: \"reset-password\",\n      index: undefined,\n      caseSensitive: undefined,\n      module: route4\n    },\n  \"routes/notes/index\": {\n      id: \"routes/notes/index\",\n      parentId: \"root\",\n      path: \"notes\",\n      index: true,\n      caseSensitive: undefined,\n      module: route5\n    },\n  \"routes/index\": {\n      id: \"routes/index\",\n      parentId: \"root\",\n      path: undefined,\n      index: true,\n      caseSensitive: undefined,\n      module: route6\n    },\n  \"routes/login\": {\n      id: \"routes/login\",\n      parentId: \"root\",\n      path: \"login\",\n      index: undefined,\n      caseSensitive: undefined,\n      module: route7\n    }\n  };"],
  "mappings": "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",
  "names": []
}
